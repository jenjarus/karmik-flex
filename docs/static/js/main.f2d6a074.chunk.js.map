{"version":3,"sources":["Components/Top/InputBoard.js","actions.js","Components/Top/TopBlock.js","Components/Board/BoardButton.js","Components/Board/Board.js","Components/Bottom/ResultView.js","Components/Bottom/BottomBlock.js","App.js","reducer.js","index.js"],"names":["InputBoard","funcAction","labelText","initVal","flag","dispatch","useDispatch","fillerEmote","useSelector","store","activeEmote","e","type","target","value","trim","className","htmlFor","id","defaultValue","onChange","TopBlock","onClick","BoardButton","board","classActive","editElementArr","Board","arrButtons","i","push","creatArrayButton","map","el","ResultView","refs","result","join","ref","readOnly","textAreaRef","useRef","undefined","navigator","clipboard","writeText","current","then","err","console","error","window","clipboardData","setData","App","BottomBlock","initialState","createStore","state","action","item","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f2d6a074.chunk.js","sourcesContent":["import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {editFillerEmote, editActiveEmote} from '../../actions';\r\n\r\nconst InputBoard = ({flag}) => {\r\n    const dispatch = useDispatch();\r\n    const fillerEmote = useSelector((store) => store.fillerEmote);\r\n    const activeEmote = useSelector((store) => store.activeEmote);\r\n    let funcAction, labelText, initVal;\r\n\r\n    if(flag === 'filler') {\r\n        funcAction = (e) => dispatch(editFillerEmote(e.target.value.trim()));\r\n        labelText = 'Заполнитель';\r\n        initVal = fillerEmote;\r\n    } else if (flag === 'active') {\r\n        funcAction = (e) => dispatch(editActiveEmote(e.target.value.trim()));\r\n        labelText = 'Основной';\r\n        initVal = activeEmote;\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-board\">\r\n            <label htmlFor={flag}>{labelText}</label>\r\n            <input id={flag} defaultValue={initVal} type=\"text\" className={\"input\"} onChange={(e) => funcAction(e)}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InputBoard;\r\n","export function editElementArr(id) {\r\n    return {\r\n        type: 'EDIT_ELEMENT_ARR',\r\n        id: id,\r\n    }\r\n}\r\n\r\nexport function editFillerEmote(value) {\r\n    return {\r\n        type: 'EDIT_FILLER_EMOTE',\r\n        fillerEmote: value,\r\n    }\r\n}\r\n\r\nexport function editActiveEmote(value) {\r\n    return {\r\n        type: 'EDIT_ACTIVE_EMOTE',\r\n        activeEmote: value,\r\n    }\r\n}\r\n\r\nexport function resetBoard() {\r\n    return {\r\n        type: 'RESET_BOARD',\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {resetBoard} from '../../actions';\r\nimport InputBoard from \"./InputBoard\";\r\n\r\nconst TopBlock = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            <div className=\"top__block\">\r\n                <InputBoard flag={'filler'} />\r\n                <InputBoard flag={'active'} />\r\n            </div>\r\n            <div className=\"reset__box\">\r\n                <button className=\"btn\" onClick={() => dispatch(resetBoard())}>Очистить доску</button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TopBlock;\r\n","import React from 'react';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {editElementArr} from '../../actions';\r\n\r\nconst BoardButton = ({id}) => {\r\n    const dispatch = useDispatch();\r\n    const board = useSelector((store) => store.board);\r\n    const classActive = board[id] ? ' active' : '';\r\n\r\n    return (\r\n        <>\r\n            {(id % 17 === 0 && id !== 0) ? <br/> : ''}\r\n            <span className={'board__button' + classActive} onClick={() => dispatch(editElementArr(id))}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BoardButton;\r\n","import React from 'react';\r\nimport BoardButton from './BoardButton';\r\n\r\nconst Board = () => {\r\n    const creatArrayButton = () => {\r\n        let arrButtons = [];\r\n        for(let i = 0; i <= 67; i++) {\r\n            arrButtons.push(<BoardButton key={i} id={i}/>)\r\n        }\r\n        return arrButtons;\r\n    };\r\n\r\n    const arrButtons = creatArrayButton();\r\n\r\n    return (\r\n        <div className=\"board\">\r\n            {arrButtons.map(el => el)}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst ResultView = ({refs}) => {\r\n    const board = useSelector((store) => store.board);\r\n    const fillerEmote = useSelector((store) => store.fillerEmote);\r\n    const activeEmote = useSelector((store) => store.activeEmote);\r\n    const result = board.map(el => el ? activeEmote : fillerEmote).join(' ');\r\n\r\n\r\n    return (\r\n        <textarea value={result} ref={refs} readOnly />\r\n    );\r\n};\r\n\r\nexport default ResultView;\r\n","import React, {useRef} from 'react';\r\nimport ResultView from \"./ResultView\";\r\n\r\nconst TopBlock = () => {\r\n    const textAreaRef = useRef(null);\r\n\r\n    const copyFunc = () => {\r\n        if (navigator.clipboard != undefined) { //Chrome\r\n            navigator.clipboard.writeText(textAreaRef.current.value).then(function () {\r\n            }, function (err) {\r\n                console.error('Async: Could not copy text: ', err);\r\n            });\r\n        }\r\n        else if(window.clipboardData) { // Internet Explorer\r\n            window.clipboardData.setData(\"Text\", textAreaRef.current.value);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"bottom__block\">\r\n            <button className=\"btn\" onClick={copyFunc}>Скоприровать</button>\r\n            <ResultView refs={textAreaRef} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TopBlock;\r\n","import React from 'react';\nimport './Styles/reset.css';\nimport './Styles/base.scss';\nimport TopBlock from './Components/Top/TopBlock';\nimport Board from \"./Components/Board/Board\";\nimport BottomBlock from './Components/Bottom/BottomBlock';\n\nfunction App() {\n  return (\n      <>\n        <header>\n          <div className=\"container\">\n            <div className=\"header\">\n              <div className=\"title\">Karmik - <span className=\"red\">Flex</span></div>\n            </div>\n          </div>\n        </header>\n        <main>\n          <article className=\"container\">\n              <TopBlock />\n              <Board />\n              <BottomBlock />\n          </article>\n        </main>\n        <footer>\n          <div className=\"container\">\n            <div className=\"footer\">\n              <div className=\"copy\">©Jenjarus <span className=\"year\">2077</span></div>\n            </div>\n          </div>\n        </footer>\n      </>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n    fillerEmote: 'kkFlex',\r\n    activeEmote: 'Dance',\r\n    board: [false, true, true, true, false, true, false, false, false, false, true, true, false, true, false, true,\r\n        false, false, true, false, false, false, true, false, false, false, false, true, true, false, false, true,\r\n        false, false, false, true, true, true, false, true, false, false, false, false, true, false, false, false,\r\n        true, false, false, false, true, false, false, false, true, true, true, false, false, true, true, false, true,\r\n        false, true, false],\r\n};\r\n\r\nexport default function reducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'EDIT_ELEMENT_ARR':\r\n            return {\r\n                ...state,\r\n                board: [...state.board.map((item, i) => i === action.id ? !item : item)],\r\n            };\r\n        case 'EDIT_FILLER_EMOTE':\r\n            return {\r\n                ...state,\r\n                fillerEmote: action.fillerEmote,\r\n            };\r\n        case 'EDIT_ACTIVE_EMOTE':\r\n            return {\r\n                ...state,\r\n                activeEmote: action.activeEmote,\r\n            };\r\n        case 'RESET_BOARD':\r\n            return {\r\n                ...state,\r\n                board: [...state.board.map(item => false)],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import \"react-app-polyfill/ie11\";\nimport \"react-app-polyfill/stable\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport reducer from './reducer';\n\nconst store = createStore(reducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}